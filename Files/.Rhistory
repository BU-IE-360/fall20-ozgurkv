checkresiduals(fit5, col="red")
dt[,fitted:=fitted(fit5)]
dt[,residual:=residuals(fit5)]
dt %>%
ggplot(aes(x=fitted, y=residual, color=fitted)) + geom_point() +
scale_colour_gradient2(low = "cyan", mid = "purple" ,
high = "darkorchid4",midpoint=mean(dt$fitted)) +
xlab('Fitted Values') +
ylab('Residuals') +
labs(title="Residuals vs. Fitted Values",fill = "Fitted") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
dt %>%
ggplot(aes(x=fitted, y=SalesRoot, color=fitted)) +
geom_abline(slope=1, intercept=0) +
geom_point() +
scale_colour_gradient2(low = "orange", mid = "coral" ,
high = "brown2",midpoint=mean(dt$fitted)) +
xlab('Fitted Values') +
ylab('Actual Values') +
labs(title="Actual vs. Fitted Values",fill = "Fitted") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
dt[,Date:=House_Sales$Date]
cols <- c("predicted" = "darkorchid1", "actual" = "darkolivegreen2")
p1<-ggplot() +
geom_line(data = dt, aes(x = Date, y = fitted,color = "predicted"),size = 1) +
geom_line(data = dt, aes(x = Date, y = SalesRoot,color = "actual"),size = 1) +
theme_minimal() +
xlab('Time') +
ylab('Root of Sales') +
scale_color_manual(values = cols)
dt[,predicted_sales:=fitted^2]
dt[,actual_sales:=SalesRoot^2]
cols2 <- c("predicted" = "coral1", "actual" = "aquamarine3")
p2<-ggplot() +
geom_line(data = dt, aes(x = Date, y = predicted_sales,color = "predicted"),size = 1) +
geom_line(data = dt, aes(x = Date, y = actual_sales,color = "actual"), size = 1) +
theme_minimal() +
xlab('Time') +
ylab('Sales') +
scale_color_manual(values = cols2)
grid.arrange(p1, p2, nrow=2)
month_info <- c(12)
dt=rbind(dt,data.table(month=as.factor(month_info)),fill=T)
dt[is.na(month)==T,month:=12]
dt[is.na(outliers)==T,outliers:=0]
dt[is.na(outliers2)==T,outliers2:=0]
dt[is.na(Euro)==T,Euro:=9.38]
dt[is.na(GES)==T,GES:=60.89]
dt[is.na(PHIR)==T,PHIR:=26.37]
dt[is.na(fitted)==T,fitted:=predict(fit5,dt[is.na(fitted)==T])]
colnames(dt)[colnames(dt) == "predicted_sales"] <- "Prediction"
dt[is.na(Prediction)==T,Prediction:=dt[.N,9]^2]
dt[.N,12]
knitr::opts_chunk$set(echo = FALSE)
library(readr)
House_Sales <- read_csv("C:/Users/ozgur/Desktop/Documents/IE 360/Homework 3/House_Sales.csv",
col_types = cols(Date = col_date(format = "%m/%Y")))
library(data.table)
library(ggplot2)
library(GGally)
library(forecast)
library(zoo)
library(ggcorrplot)
library(gridExtra)
setDT(House_Sales)
colnames(House_Sales)[colnames(House_Sales) %in% c("Loan")] <- c("Interest Rate")
head(House_Sales)
Sales <- ts(House_Sales$Sales,freq=12,start=c(2013,1))
plot1 <- ggplot() +
geom_line(data = House_Sales, aes(x = Date, y = Sales, color=Sales),size = 1) +
scale_colour_gradient2(low = "cyan", mid = "purple" ,
high = "purple",midpoint=mean(House_Sales$Sales)) +
xlab('Time') +
ylab('Sales') +
labs(title="Monthly House Sales from January 2013 to December 2020") +
theme_minimal() +
theme(legend.position="none",plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
sales_root <- sqrt(Sales)
House_Sales <- cbind(House_Sales,sales_root)
plot2 <- ggplot() +
geom_line(data = House_Sales, aes(x = Date, y = sales_root, color=sales_root),size = 1) +
scale_colour_gradient2(low = "orange", mid = "orange" ,
high = "red",midpoint=mean(House_Sales$sales_root)) +
xlab('Time') +
ylab('Square Root of Sales') +
labs(title="Square Root of Monthly House Sales from January 2013 to December 2020") +
theme_minimal() +
theme(legend.position="none",plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
grid.arrange(plot1, plot2, nrow=2)
HouseSales <- House_Sales[,-c(1)]
ts_sales <- ts(HouseSales,freq=12,start=c(2013,1))
ts_sales1 <- ts_sales[,-1] #removed sales
plot(zoo(ts_sales1), col = "blue", cex=1.5, main="Candidate Measures & Square Root of Sales from 01/2013 to 11/2020",
xlab="Time", ylab = c("CCI","FSH","GES","PBBH","Interest Rate", "Euro","PHIR","Root of Sales"),
cex.main = 2,   font.main= 1, col.main= "black")
colnames(ts_sales1) <- c("CCI","FSH","GES","PBBH","Interest","Euro","PHIR","Sales")
corr <- cor(ts_sales1)
correlationplot <- ggcorrplot(corr, hc.order = TRUE,
outline.col = "black",
show.legend = FALSE,
type = "full",
lab = TRUE,
lab_size = 4,
title = "Correlation Matrix",
colors = c("seagreen","white","orangered2"),
legend.title = "Correlation") +
theme(legend.position="none",plot.title=element_text(hjust=0.5),
axis.text.x = element_text(angle = 90, vjust =0.5, hjust=0.5))
correlationplot
dt <- data.table(SalesRoot = as.numeric(sales_root))
GES <- ts(House_Sales$GES,freq=12,start=c(2013,1))
PHIR <- ts(House_Sales$PHIR,freq=12,start=c(2013,1))
Euro <- ts(House_Sales$Euro,freq=12,start=c(2013,1))
PBBH <- ts(House_Sales$PBBH,freq=12,start=c(2013,1))
dt <- cbind(dt, GES = as.numeric(GES))
dt <- cbind(dt, PHIR = as.numeric(PHIR))
dt <- cbind(dt, Euro = as.numeric(Euro))
dt <- cbind(dt, PBBH = as.numeric(Euro))
fit <- lm(SalesRoot ~ PHIR + Euro + GES, data=dt)
summary(fit)
checkresiduals(fit, col="red")
month <- rep(seq(1,12, by=1),times=7)
month[85:95] <- c(1:11)
dt <- cbind(dt,month)
fit2 <- lm(SalesRoot ~ as.factor(month) + PHIR + Euro + GES, data=dt)
summary(fit2)
fit3 <- lm(SalesRoot ~ -1 + as.factor(month) + PHIR + Euro + GES, data=dt)
summary(fit3)
checkresiduals(fit3,col="red")
boxplot <- ggplot(House_Sales,aes(Date,sales_root)) + geom_boxplot(aes(group=1),size=0.8,fill="purple") +theme_minimal() + geom_jitter(width=0.1,alpha=0.2) +
labs(title="Boxplot of Square Root of House Sales",x="Time (in Years)", y="Root of House Sales",fill = "Years") +
theme(plot.title=element_text(hjust=0.5),axis.line = element_line(colour = "gray", size=0.8))
boxplot
dt[,outliers := 1]
dt[c(78,88,89), outliers := 0]
dt[,outliers2 := 0]
dt[c(84,90,91,92), outliers2 := 1]
fit4 <- lm(SalesRoot ~ -1 + as.factor(month) + PHIR + GES + Euro + outliers + outliers2, data=dt)
summary(fit4)
checkresiduals(fit4,col="red")
fit5 <- lm(SalesRoot ~ -1 + as.factor(month) + PHIR + GES + outliers + outliers2, data=dt)
summary(fit5)
checkresiduals(fit5, col="red")
dt[,fitted:=fitted(fit5)]
dt[,residual:=residuals(fit5)]
dt %>%
ggplot(aes(x=fitted, y=residual, color=fitted)) + geom_point() +
scale_colour_gradient2(low = "cyan", mid = "purple" ,
high = "darkorchid4",midpoint=mean(dt$fitted)) +
xlab('Fitted Values') +
ylab('Residuals') +
labs(title="Residuals vs. Fitted Values",fill = "Fitted") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
dt %>%
ggplot(aes(x=fitted, y=SalesRoot, color=fitted)) +
geom_abline(slope=1, intercept=0) +
geom_point() +
scale_colour_gradient2(low = "orange", mid = "coral" ,
high = "brown2",midpoint=mean(dt$fitted)) +
xlab('Fitted Values') +
ylab('Actual Values') +
labs(title="Actual vs. Fitted Values",fill = "Fitted") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
dt[,Date:=House_Sales$Date]
cols <- c("predicted" = "darkorchid1", "actual" = "darkolivegreen2")
p1<-ggplot() +
geom_line(data = dt, aes(x = Date, y = fitted,color = "predicted"),size = 1) +
geom_line(data = dt, aes(x = Date, y = SalesRoot,color = "actual"),size = 1) +
theme_minimal() +
xlab('Time') +
ylab('Root of Sales') +
scale_color_manual(values = cols)
dt[,predicted_sales:=fitted^2]
dt[,actual_sales:=SalesRoot^2]
cols2 <- c("predicted" = "coral1", "actual" = "aquamarine3")
p2<-ggplot() +
geom_line(data = dt, aes(x = Date, y = predicted_sales,color = "predicted"),size = 1) +
geom_line(data = dt, aes(x = Date, y = actual_sales,color = "actual"), size = 1) +
theme_minimal() +
xlab('Time') +
ylab('Sales') +
scale_color_manual(values = cols2)
grid.arrange(p1, p2, nrow=2)
month_info <- c(12)
dt=rbind(dt,data.table(month=as.factor(month_info)),fill=T)
dt[is.na(month)==T,month:=12]
dt[is.na(outliers)==T,outliers:=0]
dt[is.na(outliers2)==T,outliers2:=0]
dt[is.na(Euro)==T,Euro:=9.38]
dt[is.na(GES)==T,GES:=60.89]
dt[is.na(PHIR)==T,PHIR:=26.37]
dt[is.na(fitted)==T,fitted:=predict(fit5,dt[is.na(fitted)==T])]
colnames(dt)[colnames(dt) == "predicted_sales"] <- "Prediction"
dt[is.na(Prediction)==T,Prediction:=dt[.N,9]^2]
dt[.N,12]
View(dt)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
House_Sales <- read_csv("C:/Users/ozgur/Desktop/Documents/IE 360/Homework 3/House_Sales.csv",
col_types = cols(Date = col_date(format = "%m/%Y")))
library(data.table)
library(ggplot2)
library(GGally)
library(forecast)
library(zoo)
library(ggcorrplot)
library(gridExtra)
setDT(House_Sales)
colnames(House_Sales)[colnames(House_Sales) %in% c("Loan")] <- c("Interest Rate")
head(House_Sales)
Sales <- ts(House_Sales$Sales,freq=12,start=c(2013,1))
plot1 <- ggplot() +
geom_line(data = House_Sales, aes(x = Date, y = Sales, color=Sales),size = 1) +
scale_colour_gradient2(low = "cyan", mid = "purple" ,
high = "purple",midpoint=mean(House_Sales$Sales)) +
xlab('Time') +
ylab('Sales') +
labs(title="Monthly House Sales from January 2013 to December 2020") +
theme_minimal() +
theme(legend.position="none",plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
sales_root <- sqrt(Sales)
House_Sales <- cbind(House_Sales,sales_root)
plot2 <- ggplot() +
geom_line(data = House_Sales, aes(x = Date, y = sales_root, color=sales_root),size = 1) +
scale_colour_gradient2(low = "orange", mid = "orange" ,
high = "red",midpoint=mean(House_Sales$sales_root)) +
xlab('Time') +
ylab('Square Root of Sales') +
labs(title="Square Root of Monthly House Sales from January 2013 to December 2020") +
theme_minimal() +
theme(legend.position="none",plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
grid.arrange(plot1, plot2, nrow=2)
HouseSales <- House_Sales[,-c(1)]
ts_sales <- ts(HouseSales,freq=12,start=c(2013,1))
ts_sales1 <- ts_sales[,-1] #removed sales
plot(zoo(ts_sales1), col = "blue", cex=1.5, main="Candidate Measures & Square Root of Sales from 01/2013 to 11/2020",
xlab="Time", ylab = c("CCI","FSH","GES","PBBH","Interest Rate", "Euro","PHIR","Root of Sales"),
cex.main = 2,   font.main= 1, col.main= "black")
colnames(ts_sales1) <- c("CCI","FSH","GES","PBBH","Interest","Euro","PHIR","Sales")
corr <- cor(ts_sales1)
correlationplot <- ggcorrplot(corr, hc.order = TRUE,
outline.col = "black",
show.legend = FALSE,
type = "full",
lab = TRUE,
lab_size = 4,
title = "Correlation Matrix",
colors = c("seagreen","white","orangered2"),
legend.title = "Correlation") +
theme(legend.position="none",plot.title=element_text(hjust=0.5),
axis.text.x = element_text(angle = 90, vjust =0.5, hjust=0.5))
correlationplot
dt <- data.table(SalesRoot = as.numeric(sales_root))
GES <- ts(House_Sales$GES,freq=12,start=c(2013,1))
PHIR <- ts(House_Sales$PHIR,freq=12,start=c(2013,1))
Euro <- ts(House_Sales$Euro,freq=12,start=c(2013,1))
PBBH <- ts(House_Sales$PBBH,freq=12,start=c(2013,1))
dt <- cbind(dt, GES = as.numeric(GES))
dt <- cbind(dt, PHIR = as.numeric(PHIR))
dt <- cbind(dt, Euro = as.numeric(Euro))
dt <- cbind(dt, PBBH = as.numeric(Euro))
fit <- lm(SalesRoot ~ PHIR + Euro + GES, data=dt)
summary(fit)
checkresiduals(fit, col="red")
month <- rep(seq(1,12, by=1),times=7)
month[85:95] <- c(1:11)
dt <- cbind(dt,month)
fit2 <- lm(SalesRoot ~ as.factor(month) + PHIR + Euro + GES, data=dt)
summary(fit2)
fit3 <- lm(SalesRoot ~ -1 + as.factor(month) + PHIR + Euro + GES, data=dt)
summary(fit3)
checkresiduals(fit3,col="red")
boxplot <- ggplot(House_Sales,aes(Date,sales_root)) + geom_boxplot(aes(group=1),size=0.8,fill="purple") +theme_minimal() + geom_jitter(width=0.1,alpha=0.2) +
labs(title="Boxplot of Square Root of House Sales",x="Time (in Years)", y="Root of House Sales",fill = "Years") +
theme(plot.title=element_text(hjust=0.5),axis.line = element_line(colour = "gray", size=0.8))
boxplot
dt[,outliers := 0]
dt[c(78,88,89), outliers := 1]
dt[,outliers2 := 0]
dt[c(84,90,91,92), outliers2 := 1]
fit4 <- lm(SalesRoot ~ -1 + as.factor(month) + PHIR + GES + Euro + outliers + outliers2, data=dt)
summary(fit4)
checkresiduals(fit4,col="red")
fit5 <- lm(SalesRoot ~ -1 + as.factor(month) + PHIR + GES + outliers + outliers2, data=dt)
summary(fit5)
checkresiduals(fit5, col="red")
dt[,fitted:=fitted(fit5)]
dt[,residual:=residuals(fit5)]
dt %>%
ggplot(aes(x=fitted, y=residual, color=fitted)) + geom_point() +
scale_colour_gradient2(low = "cyan", mid = "purple" ,
high = "darkorchid4",midpoint=mean(dt$fitted)) +
xlab('Fitted Values') +
ylab('Residuals') +
labs(title="Residuals vs. Fitted Values",fill = "Fitted") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
dt %>%
ggplot(aes(x=fitted, y=SalesRoot, color=fitted)) +
geom_abline(slope=1, intercept=0) +
geom_point() +
scale_colour_gradient2(low = "orange", mid = "coral" ,
high = "brown2",midpoint=mean(dt$fitted)) +
xlab('Fitted Values') +
ylab('Actual Values') +
labs(title="Actual vs. Fitted Values",fill = "Fitted") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
dt[,Date:=House_Sales$Date]
cols <- c("predicted" = "darkorchid1", "actual" = "darkolivegreen2")
p1<-ggplot() +
geom_line(data = dt, aes(x = Date, y = fitted,color = "predicted"),size = 1) +
geom_line(data = dt, aes(x = Date, y = SalesRoot,color = "actual"),size = 1) +
theme_minimal() +
xlab('Time') +
ylab('Root of Sales') +
scale_color_manual(values = cols)
dt[,predicted_sales:=fitted^2]
dt[,actual_sales:=SalesRoot^2]
cols2 <- c("predicted" = "coral1", "actual" = "aquamarine3")
p2<-ggplot() +
geom_line(data = dt, aes(x = Date, y = predicted_sales,color = "predicted"),size = 1) +
geom_line(data = dt, aes(x = Date, y = actual_sales,color = "actual"), size = 1) +
theme_minimal() +
xlab('Time') +
ylab('Sales') +
scale_color_manual(values = cols2)
grid.arrange(p1, p2, nrow=2)
month_info <- c(12)
dt=rbind(dt,data.table(month=as.factor(month_info)),fill=T)
dt[is.na(month)==T,month:=12]
dt[is.na(outliers)==T,outliers:=0]
dt[is.na(outliers2)==T,outliers2:=0]
dt[is.na(Euro)==T,Euro:=9.38]
dt[is.na(GES)==T,GES:=60.89]
dt[is.na(PHIR)==T,PHIR:=26.37]
dt[is.na(fitted)==T,fitted:=predict(fit5,dt[is.na(fitted)==T])]
colnames(dt)[colnames(dt) == "predicted_sales"] <- "Prediction"
dt[is.na(Prediction)==T,Prediction:=dt[.N,9]^2]
dt[.N,12]
View(dt)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
House_Sales <- read_csv("C:/Users/ozgur/Desktop/Documents/IE 360/Homework 3/House_Sales.csv",
col_types = cols(Date = col_date(format = "%m/%Y")))
library(data.table)
library(ggplot2)
library(GGally)
library(forecast)
library(zoo)
library(ggcorrplot)
library(gridExtra)
setDT(House_Sales)
colnames(House_Sales)[colnames(House_Sales) %in% c("Loan")] <- c("Interest Rate")
head(House_Sales)
Sales <- ts(House_Sales$Sales,freq=12,start=c(2013,1))
plot1 <- ggplot() +
geom_line(data = House_Sales, aes(x = Date, y = Sales, color=Sales),size = 1) +
scale_colour_gradient2(low = "cyan", mid = "purple" ,
high = "purple",midpoint=mean(House_Sales$Sales)) +
xlab('Time') +
ylab('Sales') +
labs(title="Monthly House Sales from January 2013 to December 2020") +
theme_minimal() +
theme(legend.position="none",plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
sales_root <- sqrt(Sales)
House_Sales <- cbind(House_Sales,sales_root)
plot2 <- ggplot() +
geom_line(data = House_Sales, aes(x = Date, y = sales_root, color=sales_root),size = 1) +
scale_colour_gradient2(low = "orange", mid = "orange" ,
high = "red",midpoint=mean(House_Sales$sales_root)) +
xlab('Time') +
ylab('Square Root of Sales') +
labs(title="Square Root of Monthly House Sales from January 2013 to December 2020") +
theme_minimal() +
theme(legend.position="none",plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
grid.arrange(plot1, plot2, nrow=2)
HouseSales <- House_Sales[,-c(1)]
ts_sales <- ts(HouseSales,freq=12,start=c(2013,1))
ts_sales1 <- ts_sales[,-1] #removed sales
plot(zoo(ts_sales1), col = "blue", cex=1.5, main="Candidate Measures & Square Root of Sales from 01/2013 to 11/2020",
xlab="Time", ylab = c("CCI","FSH","GES","PBBH","Interest Rate", "Euro","PHIR","Root of Sales"),
cex.main = 2,   font.main= 1, col.main= "black")
colnames(ts_sales1) <- c("CCI","FSH","GES","PBBH","Interest","Euro","PHIR","Sales")
corr <- cor(ts_sales1)
correlationplot <- ggcorrplot(corr, hc.order = TRUE,
outline.col = "black",
show.legend = FALSE,
type = "full",
lab = TRUE,
lab_size = 4,
title = "Correlation Matrix",
colors = c("seagreen","white","orangered2"),
legend.title = "Correlation") +
theme(legend.position="none",plot.title=element_text(hjust=0.5),
axis.text.x = element_text(angle = 90, vjust =0.5, hjust=0.5))
correlationplot
dt <- data.table(SalesRoot = as.numeric(sales_root))
GES <- ts(House_Sales$GES,freq=12,start=c(2013,1))
PHIR <- ts(House_Sales$PHIR,freq=12,start=c(2013,1))
Euro <- ts(House_Sales$Euro,freq=12,start=c(2013,1))
PBBH <- ts(House_Sales$PBBH,freq=12,start=c(2013,1))
dt <- cbind(dt, GES = as.numeric(GES))
dt <- cbind(dt, PHIR = as.numeric(PHIR))
dt <- cbind(dt, Euro = as.numeric(Euro))
dt <- cbind(dt, PBBH = as.numeric(Euro))
fit <- lm(SalesRoot ~ PHIR + Euro + GES, data=dt)
summary(fit)
checkresiduals(fit, col="red")
month <- rep(seq(1,12, by=1),times=7)
month[85:95] <- c(1:11)
dt <- cbind(dt,month)
fit2 <- lm(SalesRoot ~ as.factor(month) + PHIR + Euro + GES, data=dt)
summary(fit2)
fit3 <- lm(SalesRoot ~ -1 + as.factor(month) + PHIR + Euro + GES, data=dt)
summary(fit3)
checkresiduals(fit3,col="red")
boxplot <- ggplot(House_Sales,aes(Date,sales_root)) + geom_boxplot(aes(group=1),size=0.8,fill="purple") +theme_minimal() + geom_jitter(width=0.1,alpha=0.2) +
labs(title="Boxplot of Square Root of House Sales",x="Time (in Years)", y="Root of House Sales",fill = "Years") +
theme(plot.title=element_text(hjust=0.5),axis.line = element_line(colour = "gray", size=0.8))
boxplot
dt[,outliers := 0]
dt[c(78,88,89), outliers := 1]
dt[,outliers2 := 0]
dt[c(84,90,91,92), outliers2 := 1]
fit4 <- lm(SalesRoot ~ -1 + as.factor(month) + PHIR + GES + Euro + outliers + outliers2, data=dt)
summary(fit4)
checkresiduals(fit4,col="red")
fit5 <- lm(SalesRoot ~ -1 + as.factor(month) + PHIR + GES + outliers + outliers2, data=dt)
summary(fit5)
checkresiduals(fit5, col="red")
dt[,fitted:=fitted(fit5)]
dt[,residual:=residuals(fit5)]
dt %>%
ggplot(aes(x=fitted, y=residual, color=fitted)) + geom_point() +
scale_colour_gradient2(low = "cyan", mid = "purple" ,
high = "darkorchid4",midpoint=mean(dt$fitted)) +
xlab('Fitted Values') +
ylab('Residuals') +
labs(title="Residuals vs. Fitted Values",fill = "Fitted") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
dt %>%
ggplot(aes(x=fitted, y=SalesRoot, color=fitted)) +
geom_abline(slope=1, intercept=0) +
geom_point() +
scale_colour_gradient2(low = "orange", mid = "coral" ,
high = "brown2",midpoint=mean(dt$fitted)) +
xlab('Fitted Values') +
ylab('Actual Values') +
labs(title="Actual vs. Fitted Values",fill = "Fitted") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5),
axis.line = element_line(colour="gray", size=0.8))
dt[,Date:=House_Sales$Date]
cols <- c("predicted" = "darkorchid1", "actual" = "darkolivegreen2")
p1<-ggplot() +
geom_line(data = dt, aes(x = Date, y = fitted,color = "predicted"),size = 1) +
geom_line(data = dt, aes(x = Date, y = SalesRoot,color = "actual"),size = 1) +
theme_minimal() +
xlab('Time') +
ylab('Root of Sales') +
scale_color_manual(values = cols)
dt[,predicted_sales:=fitted^2]
dt[,actual_sales:=SalesRoot^2]
cols2 <- c("predicted" = "coral1", "actual" = "aquamarine3")
p2<-ggplot() +
geom_line(data = dt, aes(x = Date, y = predicted_sales,color = "predicted"),size = 1) +
geom_line(data = dt, aes(x = Date, y = actual_sales,color = "actual"), size = 1) +
theme_minimal() +
xlab('Time') +
ylab('Sales') +
scale_color_manual(values = cols2)
grid.arrange(p1, p2, nrow=2)
month_info <- c(12)
dt=rbind(dt,data.table(month=as.factor(month_info)),fill=T)
dt[is.na(month)==T,month:=12]
dt[is.na(outliers)==T,outliers:=0]
dt[is.na(outliers2)==T,outliers2:=0]
dt[is.na(Euro)==T,Euro:=9.38]
dt[is.na(GES)==T,GES:=60.89]
dt[is.na(PHIR)==T,PHIR:=26.37]
dt[is.na(fitted)==T,fitted:=predict(fit5,dt[is.na(fitted)==T])]
colnames(dt)[colnames(dt) == "predicted_sales"] <- "Prediction"
dt[is.na(Prediction)==T,Prediction:=dt[.N,9]^2]
dt[.N,12]
plot(dt[,list(PHIR,residual=fit5$residual)])
plot(dt[,list(GES,residual=fit5$residual)])
plot(dt[,list(GES,residual=fit5$residual)])
acf(Sales)
plot(dt[,list(GES,residual=fit5$residual)])
acf(Sales)
acf(dt$fitted)
checkresiduals(fit5, col="red") + theme_minimal()
checkresiduals(fit5, col="red", fill="purple")
